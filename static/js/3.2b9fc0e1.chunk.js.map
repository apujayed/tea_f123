{"version":3,"sources":["components/reuseable/FormField.js","components/DataTable.js"],"names":["FormField","_ref","label","name","value","type","options","onChange","error","_jsxs","className","children","_jsx","htmlFor","required","autoComplete","id","map","option","placeholder","DataTable","columns","data","_useTable","useTable","initialState","pageIndex","pageSize","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","page","prepareRow","state","setGlobalFilter","nextPage","canNextPage","previousPage","canPreviousPage","pageOptions","setPageSize","globalFilter","e","Number","target","size","_objectSpread","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","onClick","disabled","length"],"mappings":"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","file":"static/js/3.2b9fc0e1.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst FormField = ({ label, name, value, type, options, onChange ,error}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name} className=\"col-sm-3 control-label\">\r\n        {label}\r\n      </label>\r\n      <div className=\"col-sm-9\">\r\n        {type === \"select\" ? (\r\n          <select\r\n            required\r\n            value={value}\r\n            onChange={onChange}\r\n            name={name}\r\n            autoComplete=\"off\"\r\n            id={name}\r\n            className=\"form-control\"\r\n          >\r\n            <option value=\"\"> -- Select {label} -- </option>\r\n            {options.map((option) => (\r\n              <option key={option.value} value={option.value}>\r\n                {option.label}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <input\r\n            required\r\n            className=\"form-control\"\r\n            type={type}\r\n            value={value}\r\n            name={name}\r\n            placeholder={label}\r\n            autoComplete=\"off\"\r\n            onChange={onChange}\r\n            id={name}\r\n          />\r\n        )}\r\n          {error && <p className=\"text-danger\">{error}</p>} {/* Display error message */}\r\n   \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormField;\r\n","import React from 'react';\r\nimport { useTable, usePagination, useGlobalFilter } from 'react-table';\r\n\r\nconst DataTable = ({ id, columns, data }) => {\r\n  const {\r\n    getTableProps,\r\n    getTableBodyProps,\r\n    headerGroups,\r\n    page,\r\n    prepareRow,\r\n    state,\r\n    setGlobalFilter,\r\n    nextPage,\r\n    canNextPage,\r\n    previousPage,\r\n    canPreviousPage,\r\n    pageOptions,\r\n    setPageSize,\r\n  } = useTable(\r\n    {\r\n      columns,\r\n      data,\r\n      initialState: { pageIndex: 0, pageSize: 10 },\r\n    },\r\n    useGlobalFilter,\r\n    usePagination\r\n  );\r\n\r\n  const { globalFilter, pageIndex, pageSize } = state;\r\n\r\n  return (\r\n    <div className=\"datatable-con\">\r\n    <div className=\"table-responsive\">\r\n      <div className=\"pagination-container\">\r\n        <div className=\"pagination-top\">\r\n          <div className=\"row\">\r\n        \r\n          <select\r\n            value={pageSize}\r\n            onChange={(e) => {\r\n              setPageSize(Number(e.target.value));\r\n            }}\r\n          >\r\n            {[10, 20, 30, 40, 50].map((size) => (\r\n              <option key={size} value={size}>\r\n                {size}\r\n              </option>\r\n            ))}\r\n          </select>\r\n            \r\n          </div>\r\n          <input\r\n            type=\"text\"\r\n            value={globalFilter || ''}\r\n            onChange={(e) => setGlobalFilter(e.target.value)}\r\n            placeholder=\"Search...\"\r\n          />\r\n        </div>\r\n      </div>\r\n      <table id=\"data-table\" className=\"table table-striped table-bordered\" {...getTableProps()}>\r\n        <thead>\r\n          {headerGroups.map((headerGroup) => (\r\n            <tr {...headerGroup.getHeaderGroupProps()}>\r\n              {headerGroup.headers.map((column) => (\r\n                <th {...column.getHeaderProps()}>{column.render('Header')}</th>\r\n              ))}\r\n            </tr>\r\n          ))}\r\n        </thead>\r\n        <tbody {...getTableBodyProps()}>\r\n          {page.map((row) => {\r\n            prepareRow(row);\r\n            return (\r\n              <tr {...row.getRowProps()}>\r\n                {row.cells.map((cell) => {\r\n                  return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>;\r\n                })}\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <div className=\"pagination-container\">\r\n        <div className=\"pagination-bottom\">\r\n          <button onClick={() => previousPage()} disabled={!canPreviousPage}>\r\n            Previous\r\n          </button>\r\n          <span>\r\n            Page{' '}\r\n            <strong>\r\n              {pageIndex + 1} of {pageOptions.length}\r\n            </strong>\r\n          </span>\r\n          <button onClick={() => nextPage()} disabled={!canNextPage}>\r\n            Next\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DataTable;\r\n"],"sourceRoot":""}